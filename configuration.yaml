homeassistant:
  # Name of the location where Home Assistant is running
  name: Home
  # Location required to calculate the time the sun rises and sets
  latitude: !secret latitude
  longitude: !secret longitude
  # Impacts weather/sunrise data (altitude above sea level in meters)
  elevation: 568
  # metric for Metric, imperial for Imperial
  unit_system: metric
  # Pick yours from here: http://en.wikipedia.org/wiki/List_of_tz_database_time_zones
  time_zone: Europe/Zurich
  # Customization file
  customize: !include customize.yaml

# Show links to resources in log and frontend
# introduction

# Logger
# logger:
#   default: debug


# Enables the frontend
frontend: 
  themes: !include_dir_merge_named themes/

# Enables configuration UI
config:

http:
  # Uncomment this to add a password (recommended!)
  api_password: !secret http_password
  # Uncomment this if you are using SSL/TLS, running in Docker container, etc.
  # base_url: example.duckdns.org:8123

  base_url: !secret base_url

  trusted_networks:
    - !secret trusted_ip2

  ip_ban_enabled: True
  login_attempts_threshold: 10

# Checks for available updates
# Note: This component will send some information about your system to
# the developers to assist with development of Home Assistant.
# For more information, please see:
# https://home-assistant.io/blog/2016/10/25/explaining-the-updater/
updater:
  # Optional, allows Home Assistant developers to focus on popular components.
  # include_used_components: true

# Discover some devices automatically
discovery:

recorder:
  purge_interval: 1
  purge_keep_days: 7

# Allows you to issue voice commands from the frontend in enabled browsers
conversation:

# Enables support for tracking state changes over time
history:

# View all events in a logbook
logbook:

# Enables a map showing the location of tracked devices
map:

# Track the sun
sun:

# Weather prediction
#sensor:
#  - platform: yr

# Text to speech
tts:
  - platform: google

# Philips Hue
# light:
#   - platform: hue
#     host: 192.168.1.83
hue:
  bridges:
    - host: 192.168.1.83

# IKEA Tradfri
tradfri:
  host: 192.168.1.80

#MQTT
mqtt:
  broker: 192.168.1.230
  username: !secret mqtt_username
  password: !secret mqtt_password

#group: !include_dir_merge_named groups/

panel_custom: !include panel_custom.yaml

group: !include_dir_merge_named groups/
automation: !include_dir_merge_list automation/
script: !include scripts.yaml

sensor: !include_dir_list sensors/
climate: !include_dir_list climate/
switch: !include_dir_list switches/
zone: !include_dir_list zones/
media_player: !include_dir_list media_players/
device_tracker: !include_dir_list device_tracker/

dyson:
  username: !secret dyson_username
  password: !secret dyson_password
  language: CH
  devices: 
    - device_id: !secret dyson_device_id
      device_ip: 192.168.1.84

lametric:
  client_id: !secret lametric_client_id
  client_secret: !secret lametric_client_secret

# notify:
#   name: Nofication_on_Lametric
#   platform: lametric
#     - alias: "Send notification on arrival at school"
#       trigger:
#         platform: state
#         entitiy_id: light.office_ceiling
#         from: 'off'
#         to: 'on'
#       action:
#         service: notify.lametric
#         data:
#           massage: "Light is on"
#           data:
#             sound: 'notification'
#             icon: 'i51'
 
netatmo: 
  api_key: !secret netatmo_apikey 
  secret_key: !secret netatmo_secretkey 
  username: !secret netatmo_username 
  password: !secret netatmo_password
  # discovery: False 

# climate:
#   platform: generic_thermostat
#   name: Aquarium Cooler
#   heater: switch.fluxer
#   target_sensor: sensor.average_disk_temp_volume_1
#   min_temp: 0
#   max_temp: 40
#   min_cycle_duration:
#     seconds: 30
#   cold_tolerance: 0.5
#   hot_tolerance: 0.5
#   ac_mode: True

# template_sensor:
#   template_data: "{{round((float(states('sensor.aqua01'))
#     + float(states('sensor.aqua02')) + float(states('sensor.aqua03'))
#     + float(states('sensor.aqua04')) + float(states('sensor.aqua05')))/5, 1)}}"
